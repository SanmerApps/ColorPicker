package dev.sanmer.color.picker.model

import androidx.compose.material3.ColorScheme
import dev.sanmer.color.picker.model.ColorSerializable.Companion.serializer
import kotlinx.serialization.Serializable

@Serializable
data class ColorSchemeSerializable(
    val primary: ColorSerializable,
    val onPrimary: ColorSerializable,
    val primaryContainer: ColorSerializable,
    val onPrimaryContainer: ColorSerializable,
    val inversePrimary: ColorSerializable,
    val secondary: ColorSerializable,
    val onSecondary: ColorSerializable,
    val secondaryContainer: ColorSerializable,
    val onSecondaryContainer: ColorSerializable,
    val tertiary: ColorSerializable,
    val onTertiary: ColorSerializable,
    val tertiaryContainer: ColorSerializable,
    val onTertiaryContainer: ColorSerializable,
    val background: ColorSerializable,
    val onBackground: ColorSerializable,
    val surface: ColorSerializable,
    val onSurface: ColorSerializable,
    val surfaceVariant: ColorSerializable,
    val onSurfaceVariant: ColorSerializable,
    val surfaceTint: ColorSerializable,
    val inverseSurface: ColorSerializable,
    val inverseOnSurface: ColorSerializable,
    val error: ColorSerializable,
    val onError: ColorSerializable,
    val errorContainer: ColorSerializable,
    val onErrorContainer: ColorSerializable,
    val outline: ColorSerializable,
    val outlineVariant: ColorSerializable,
    val scrim: ColorSerializable,
    val surfaceBright: ColorSerializable,
    val surfaceDim: ColorSerializable,
    val surfaceContainer: ColorSerializable,
    val surfaceContainerHigh: ColorSerializable,
    val surfaceContainerHighest: ColorSerializable,
    val surfaceContainerLow: ColorSerializable,
    val surfaceContainerLowest: ColorSerializable,
) {
    constructor(colorScheme: ColorScheme) : this(
        primary = colorScheme.primary.serializer,
        onPrimary = colorScheme.onPrimary.serializer,
        primaryContainer = colorScheme.primaryContainer.serializer,
        onPrimaryContainer = colorScheme.onPrimaryContainer.serializer,
        inversePrimary = colorScheme.inversePrimary.serializer,
        secondary = colorScheme.secondary.serializer,
        onSecondary = colorScheme.onSecondary.serializer,
        secondaryContainer = colorScheme.secondaryContainer.serializer,
        onSecondaryContainer = colorScheme.onSecondaryContainer.serializer,
        tertiary = colorScheme.tertiary.serializer,
        onTertiary = colorScheme.onTertiary.serializer,
        tertiaryContainer = colorScheme.tertiaryContainer.serializer,
        onTertiaryContainer = colorScheme.onTertiaryContainer.serializer,
        background = colorScheme.background.serializer,
        onBackground = colorScheme.onBackground.serializer,
        surface = colorScheme.surface.serializer,
        onSurface = colorScheme.onSurface.serializer,
        surfaceVariant = colorScheme.surfaceVariant.serializer,
        onSurfaceVariant = colorScheme.onSurfaceVariant.serializer,
        surfaceTint = colorScheme.surfaceTint.serializer,
        inverseSurface = colorScheme.inverseSurface.serializer,
        inverseOnSurface = colorScheme.inverseOnSurface.serializer,
        error = colorScheme.error.serializer,
        onError = colorScheme.onError.serializer,
        errorContainer = colorScheme.errorContainer.serializer,
        onErrorContainer = colorScheme.onErrorContainer.serializer,
        outline = colorScheme.outline.serializer,
        outlineVariant = colorScheme.outlineVariant.serializer,
        scrim = colorScheme.scrim.serializer,
        surfaceBright = colorScheme.surfaceBright.serializer,
        surfaceDim = colorScheme.surfaceDim.serializer,
        surfaceContainer = colorScheme.surfaceContainer.serializer,
        surfaceContainerHigh = colorScheme.surfaceContainerHigh.serializer,
        surfaceContainerHighest = colorScheme.surfaceContainerHighest.serializer,
        surfaceContainerLow = colorScheme.surfaceContainerLow.serializer,
        surfaceContainerLowest = colorScheme.surfaceContainerLowest.serializer
    )

    val colorScheme by lazy {
        ColorScheme(
            primary = primary.color,
            onPrimary = onPrimary.color,
            primaryContainer = primaryContainer.color,
            onPrimaryContainer = onPrimaryContainer.color,
            inversePrimary = inversePrimary.color,
            secondary = secondary.color,
            onSecondary = onSecondary.color,
            secondaryContainer = secondaryContainer.color,
            onSecondaryContainer = onSecondaryContainer.color,
            tertiary = tertiary.color,
            onTertiary = onTertiary.color,
            tertiaryContainer = tertiaryContainer.color,
            onTertiaryContainer = onTertiaryContainer.color,
            background = background.color,
            onBackground = onBackground.color,
            surface = surface.color,
            onSurface = onSurface.color,
            surfaceVariant = surfaceVariant.color,
            onSurfaceVariant = onSurfaceVariant.color,
            surfaceTint = surfaceTint.color,
            inverseSurface = inverseSurface.color,
            inverseOnSurface = inverseOnSurface.color,
            error = error.color,
            onError = onError.color,
            errorContainer = errorContainer.color,
            onErrorContainer = onErrorContainer.color,
            outline = outline.color,
            outlineVariant = outlineVariant.color,
            scrim = scrim.color,
            surfaceBright = surfaceBright.color,
            surfaceDim = surfaceDim.color,
            surfaceContainer = surfaceContainer.color,
            surfaceContainerHigh = surfaceContainerHigh.color,
            surfaceContainerHighest = surfaceContainerHighest.color,
            surfaceContainerLow = surfaceContainerLow.color,
            surfaceContainerLowest = surfaceContainerLowest.color
        )
    }

    companion object {
        val ColorScheme.serializer get() = ColorSchemeSerializable(this)
    }
}